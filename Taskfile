#!/bin/bash

RM=rm

function clean {    # Clean binaries
    $RM -rf bin
}

function build {    # Build {compiler:gcc} {optimizationchar:0}
  clean
  mkdir -p bin
  CC=${1:-gcc}
  OPT=${2:-3}

  case $CC in
    gcc)
      LDFLAGS=-fwhole-program
      ;;
    clang)
      LDFLAGS=-flto
      ;;
    mingw-gcc)
      LDLIBS=-lkernel32
      ;;
  esac

  for f in test/*; do
    x="${f##*/}"
    x="${x%.*}";
    $CC -I. -Wall -Wextra -Wpedantic -O$OPT $LDFLAGS $f -ffreestanding -nostdlib -lgcc $LDLIBS -o bin/$x  
  done
}

function help {     # Prints help
    echo "Usage: $0 <task> <args>"
    echo "Execute a task with the specified arguments."
    echo "By adding 'alias run=./Taskfile' you can then call it as 'run <task> <args>"
    echo
    echo "Tasks:"
    grep '^function .* #.* ' Taskfile | # Start with function and has # somewhere
      cut -d' ' -f 2- |                 # Remove the word 'function'
      tr -d '{' |                       # Remove '{}'
      sed 's/^/  /g' |                  # Indent by two spaces
      column --table --separator '#'    # column it using # as the separator
}

${@:-help}
